{
  "version": 3,
  "sources": ["../../maze-generator/index.js"],
  "sourcesContent": ["module.exports = function(size, algorithm) {\n  'use strict';\n\n  var width  = size[0]\n    , height = size[1]\n    , generator = {}\n  algorithm = algorithm || 'recursiveBacktracking'\n\n  // Helper\n  function shuffle(o) {\n      for (var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x)\n      return o\n  }\n\n  // Algorithm\n\n  /**\n   * Recursive Backtracking\n   * http://weblog.jamisbuck.org/2010/12/27/maze-generation-recursive-backtracking\n   */\n  generator.recursiveBacktracking = function() {\n    // initialize the grid\n    var grid = []\n      // duplicate to avoid overriding\n      , h = height\n\n    while (h--) {\n      var cells = []\n        , w = width\n      while (w--) cells.push(0)\n      grid.push(cells)\n    }\n\n    var N = 1\n      , S = 2\n      , E = 4\n      , W = 8\n      , dirs = ['N', 'E', 'S', 'W']\n      , dirsValue = { N: N, E: E, S: S, W: W }\n      , DX = { E: 1, W: -1, N: 0, S: 0 }\n      , DY = { E: 0, W: 0, N: -1, S: 1 }\n      , OPPOSITE = { E: W, W: E, N: S, S: N }\n\n    function carve_passages_from(cx, cy, grid) {\n      var directions = shuffle(dirs)\n\n      setImmediate(function() {\n        directions.forEach(function(direction) {\n          var nx = cx + DX[direction]\n            , ny = cy + DY[direction]\n\n          if (ny >= 0 && ny <= (grid.length - 1) && nx >= 0\n            && nx <= (grid.length - 1) && grid[ny][nx] === 0) {\n            grid[cy][cx] += dirsValue[direction]\n            grid[ny][nx] += OPPOSITE[direction]\n            carve_passages_from(nx, ny, grid)\n          }\n        })\n      })\n    }\n\n    carve_passages_from(0, 0, grid)\n\n    return grid\n  }\n\n  // trigger the generator\n  if (typeof generator[algorithm] !== 'undefined') {\n    return generator[algorithm]()\n  }\n  else {\n    throw new Error('maze-generator Error: Algorithm \"'+algorithm+'\" does not exist')\n  }\n\n}\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,WAAO,UAAU,SAAS,MAAM,WAAW;AACzC;AAEA,UAAI,QAAS,KAAK,CAAC,GACf,SAAS,KAAK,CAAC,GACf,YAAY,CAAC;AACjB,kBAAY,aAAa;AAGzB,eAAS,QAAQ,GAAG;AAChB,iBAAS,GAAG,GAAG,IAAI,EAAE,QAAQ,GAAG,IAAI,KAAK,MAAM,KAAK,OAAO,IAAI,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI;AACnG,iBAAO;AAAA,MACX;AAQA,gBAAU,wBAAwB,WAAW;AAE3C,YAAI,OAAO,CAAC,GAER,IAAI;AAER,eAAO,KAAK;AACV,cAAI,QAAQ,CAAC,GACT,IAAI;AACR,iBAAO;AAAK,kBAAM,KAAK,CAAC;AACxB,eAAK,KAAK,KAAK;AAAA,QACjB;AAEA,YAAI,IAAI,GACJ,IAAI,GACJ,IAAI,GACJ,IAAI,GACJ,OAAO,CAAC,KAAK,KAAK,KAAK,GAAG,GAC1B,YAAY,EAAE,GAAM,GAAM,GAAM,EAAK,GACrC,KAAK,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE,GAC/B,KAAK,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,GAC/B,WAAW,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE;AAExC,iBAAS,oBAAoB,IAAI,IAAIA,OAAM;AACzC,cAAI,aAAa,QAAQ,IAAI;AAE7B,uBAAa,WAAW;AACtB,uBAAW,QAAQ,SAAS,WAAW;AACrC,kBAAI,KAAK,KAAK,GAAG,SAAS,GACtB,KAAK,KAAK,GAAG,SAAS;AAE1B,kBAAI,MAAM,KAAK,MAAOA,MAAK,SAAS,KAAM,MAAM,KAC3C,MAAOA,MAAK,SAAS,KAAMA,MAAK,EAAE,EAAE,EAAE,MAAM,GAAG;AAClD,gBAAAA,MAAK,EAAE,EAAE,EAAE,KAAK,UAAU,SAAS;AACnC,gBAAAA,MAAK,EAAE,EAAE,EAAE,KAAK,SAAS,SAAS;AAClC,oCAAoB,IAAI,IAAIA,KAAI;AAAA,cAClC;AAAA,YACF,CAAC;AAAA,UACH,CAAC;AAAA,QACH;AAEA,4BAAoB,GAAG,GAAG,IAAI;AAE9B,eAAO;AAAA,MACT;AAGA,UAAI,OAAO,UAAU,SAAS,MAAM,aAAa;AAC/C,eAAO,UAAU,SAAS,EAAE;AAAA,MAC9B,OACK;AACH,cAAM,IAAI,MAAM,sCAAoC,YAAU,kBAAkB;AAAA,MAClF;AAAA,IAEF;AAAA;AAAA;",
  "names": ["grid"]
}
